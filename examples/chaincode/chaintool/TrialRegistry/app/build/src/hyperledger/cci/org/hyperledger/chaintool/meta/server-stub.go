/* Generated by chaintool.  DO NOT EDIT */

package meta

import (
	"encoding/base64"
	"errors"
	"github.com/golang/protobuf/proto"
	"github.com/hyperledger/fabric/core/chaincode/shim"
	"hyperledger/ccs/api"
)

type CCInterface interface {
	GetInterfaces(*shim.ChaincodeStub, *GetInterfacesParams) (*Interfaces, error)
	GetInterface(*shim.ChaincodeStub, *GetInterfaceParams) (*InterfaceDescriptor, error)
	GetFacts(*shim.ChaincodeStub, *GetFactsParams) (*Facts, error)
}

type stubImpl struct {
	intf CCInterface
}

// Factory mechanics
type factoryImpl struct {
}

func init() {
	self := &factoryImpl{}
	api.Register("org.hyperledger.chaintool.meta", self)
}

func (self *factoryImpl) Create(intf interface{}) (api.Dispatcher, error) {
	return &stubImpl{intf: intf.(CCInterface)}, nil
}

func (self *stubImpl) DispatchTxn(stub *shim.ChaincodeStub, function int, params string) ([]byte, error) {
	// Handle different functions
	switch {
	default:
		return nil, errors.New("Received unknown function invocation")
	}
}

func (self *stubImpl) DispatchQuery(stub *shim.ChaincodeStub, function int, params string) ([]byte, error) {
	// Handle different functions
	switch {
	case function == 1:
		return self.proxyGetInterfaces(stub, params)
	case function == 2:
		return self.proxyGetInterface(stub, params)
	case function == 3:
		return self.proxyGetFacts(stub, params)
	default:
		return nil, errors.New("Received unknown function invocation")
	}
}

/* Server stubs */
func (self *stubImpl) proxyGetInterfaces(stub *shim.ChaincodeStub, _params string) ([]byte, error) {

	params := &GetInterfacesParams{}
	_pbinput, err := base64.StdEncoding.DecodeString(_params)
	if err != nil {
		return nil, err
	}
	err = proto.Unmarshal(_pbinput, params)
	if err != nil {
		return nil, err
	}

	result, err := self.intf.GetInterfaces(stub, params)
	if err != nil {
		return nil, err
	}

	_pboutput, err := proto.Marshal(result)
	if err != nil {
		return nil, err
	}
	_result := base64.StdEncoding.EncodeToString(_pboutput)
	return []byte(_result), nil
}

func (self *stubImpl) proxyGetInterface(stub *shim.ChaincodeStub, _params string) ([]byte, error) {

	params := &GetInterfaceParams{}
	_pbinput, err := base64.StdEncoding.DecodeString(_params)
	if err != nil {
		return nil, err
	}
	err = proto.Unmarshal(_pbinput, params)
	if err != nil {
		return nil, err
	}

	result, err := self.intf.GetInterface(stub, params)
	if err != nil {
		return nil, err
	}

	_pboutput, err := proto.Marshal(result)
	if err != nil {
		return nil, err
	}
	_result := base64.StdEncoding.EncodeToString(_pboutput)
	return []byte(_result), nil
}

func (self *stubImpl) proxyGetFacts(stub *shim.ChaincodeStub, _params string) ([]byte, error) {

	params := &GetFactsParams{}
	_pbinput, err := base64.StdEncoding.DecodeString(_params)
	if err != nil {
		return nil, err
	}
	err = proto.Unmarshal(_pbinput, params)
	if err != nil {
		return nil, err
	}

	result, err := self.intf.GetFacts(stub, params)
	if err != nil {
		return nil, err
	}

	_pboutput, err := proto.Marshal(result)
	if err != nil {
		return nil, err
	}
	_result := base64.StdEncoding.EncodeToString(_pboutput)
	return []byte(_result), nil
}
